# bump: coreutils-version /COREUTILS_VERSION="(.*)"/ https://ftp.gnu.org/gnu/coreutils/|re:/href="coreutils-([\d.]+).tar.gz"/$1/|semver:*
COREUTILS_VERSION="9.7"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_STABLE_URL="https://ftp.gnu.org/gnu/coreutils/coreutils-${COREUTILS_VERSION}.tar.gz"
export ZOPEN_STABLE_DEPS="make gzip tar curl perl automake autoconf m4 sed gettext zoslib diffutils findutils getopt gawk"
export ZOPEN_BOOTSTRAP="skip"
export ZOPEN_EXTRA_CPPFLAGS="-DSLOW_BUT_NO_HACKS=1 -DNO_ASM -D_LARGE_TIME_API"
export ZOPEN_EXTRA_CONFIGURE_OPTS="--disable-dependency-tracking"
export ZOPEN_CHECK_TIMEOUT=30000 # 8 hours and a bit
export PERL="/bin/env perl"
export ZOPEN_COMP=CLANG
export ZOSLIB_ERROR_COMPAT=""

zopen_check_results()
{
  chkrefined="$1/$2_check_refined.log"
  refinetool="$1/../tools/refine-test-results" # blech 

  export ZOPEN_TEST_CATEGORIES="cat cksum cp date echo fmt groups install misc nproc od ptx readlink stdbuf shred shuf sort stat sync touch tr wc seq tac timeout truncate users"

  expectedFailures=44
  expectedErrors=2

  refinedresults=$( "${refinetool}" "${chklog}" ${ZOPEN_TEST_CATEGORIES} )
  echo "${refinedresults}" >"${chkrefined}"

  totalTests=$( cat "${chkrefined}" | wc -l )

  actualPass=$(echo "${refinedresults}" | grep -E "^PASS:" | wc -l )
  actualFailures=$(echo "${refinedresults}" | grep -E "^FAIL:" | wc -l )
  actualErrors=$(echo "${refinedresults}" | grep -E "^ERROR:" | wc -l )
  actualSkip=$(echo "${refinedresults}" | grep -E "^SKIP:" | wc -l )

  totalExpectedFailures=$(($expectedFailures+$expectedErrors))
  totalActualFailures=$(($actualFailures+$actualErrors))
  totalRunTests=$(($totalTests-$actualSkip))

cat <<ZZ
actualFailures:$totalActualFailures
totalTests:$totalRunTests
expectedFailures:$totalExpectedFailures
ZZ

}

zopen_pre_patch()
{
  export CFLAGS="$CFLAGS $CPPFLAGS"
}

zopen_post_install() 
{
  export ZOPEN_COREUTILS="b2sum base32 base64 basename blake2 cat chcon chgrp chmod chown chroot chksum comm cp csplit cut date dd dir dircolors dirname df du echo env expand expr factor false fmt groups head id install join ls md5sum mkfifo mktemp mknod nproc numfmt od pinky printf printenv ptx readlink realpath sha1sum sha224sum sha256sum sha384sum sha512sum shasum stdbuf shred shuf sort stat stdbuf sync sleep touch tr tty vdir wc yes seq tac timeout truncate users"
  findstring="find . -type f"
  for cmd in $ZOPEN_COREUTILS; do
    findstring="${findstring} ! -name ${cmd}"
  done

  # remove unsupported binaries: run as a child process so the directory change does not 'survive'
  (cd "$1/bin" && ${findstring} -print | xargs rm)

  findstring="find . -type f"
  for cmd in $ZOPEN_COREUTILS; do
    findstring="${findstring} ! -name ${cmd}.1"
  done

  # remove unsupported man pages: run as a child process so the directory change does not 'survive'
  (cd "$1/share/man/man1" && ${findstring} -print | xargs rm)

}

zopen_get_version()
{
  # pick one of the tools
  ./src/cp --version | head -1 | awk '{print $4; }'
}

